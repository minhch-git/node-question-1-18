Bài tâp 2 Nodejs
Cho lược đồ CSDL quản lý điểm sinh viên, gồm các lược đồ quan hệ sau: 
  SinhVien(MaSV, HoTen, Nu, NgaySinh, MaLop, HocBong, Tinh)
  Lop(MaLop, TenLop, MaKhoa)
  Khoa(MaKhoa, TenKhoa, SoCBGD)
  MonHoc(MaMH, TenMH, SoTiet)
  KetQua(MaSV, MaMH, DiemThi)

Viết các api sau với NodeJS
Câu 1: Liệt kê danh sách các lớp của khoa, thông tin cần Malop, TenLop, MaKhoa
SELECT * FROM Lop

Câu 2: Lập danh sách sinh viên gồm: MaSV, HoTen, HocBong
SELECT MaSV, Hoten, HocBong FROM SinhVien

Câu 3: Lập danh sách sinh viên có học bổng. Danh sách cần MaSV, Nu, HocBong
SELECT MaSV, Nu, HocBong FROM SinhVien WHERE HocBong>0

Câu 4: Lập danh sách sinh viên nữ. Danh sách cần các thuộc tính của quan hệ sinhvien
SELECT * FROM SinhVien WHERE Nu =Yes

Câu 5: Lập danh sách sinh viên có họ ‘Trần’
SELECT *  FROM SinhVien
WHERE HoTen Like ‘Trần *’

Câu 6: Lập danh sách sinh viên nữ có học bổng
SELECT *  FROM SinhVien
WHERE Nu=Yes AND HocBong>0

Câu 7: Lập danh sách sinh viên nữ hoặc danh sách sinh viên có học bổng
SELECT *  FROM SinhVien
WHERE Nu=Yes OR HocBong>0

Câu 8: Lập danh sách sinh viên có năm sinh từ 1978 đến 1985. Danh sách cần các thuộc tính của quan hệ SinhVien
SELECT *  FROM SinhVien
WHERE YEAR(NgaySinh) BETWEEN 1978 AND 1985

Câu 9: Liệt kê danh sách sinh viên được sắp xếp tăng dần theo MaSV
SELECT *  FROM SinhVien
ORDER BY MaSV

Câu 10: Liệt kê danh sách sinh viên được sắp xếp giảm dần theo HocBong
SELECT *  FROM SinhVien ORDER BY HocBong DESC

Câu 11: Lập danh sách sinh viên có điểm thi môn CSDL>=8
SELECT SinhVien.MaSV, HoTen, Nu, NgaySinh, DiemThi  FROM SinhVien INNER JOIN KetQua ON SinhVien.MaSV = KetQua.MaSV
WHERE MaMH = ‘CSDL’ AND DiemThi>=8

Câu 12: Lập danh sách sinh viên có học bổng của khoa CNTT. Thông tin cần: MaSV, HoTen, HocBong,TenLop
SELECT MaSV, HoTen, HocBong, TenLop  FROM Lop INNER JOIN SinhVien ON Lop.MaLop=SinhVien.MaLop
WHERE HocBong>0 AND MaKhoa =’CNTT’

Câu 13: Lập danh sách sinh viên có học bổng của khoa CNTT. Thông tin cần: MaSV, HoTen, HocBong,TenLop, TenKhoa
SELECT MaSV, HoTen, HocBong, TenLop,TenKhoa
  FROM ((Lop INNER JOIN SinhVien ON Lop.MaLop=SinhVien.MaLop) INNER JOIN Khoa ON Khoa.MaKhoa=Lop.MaKhoa)
WHERE HocBong>0 AND Khoa.MaKhoa =’CNTT’

Câu 14: Cho biết số sinh viên của mỗi lớp
SELECT Lop.MaLop, TenLop, Count(MaSV) as SLsinhvien  FROM Lop INNER JOIN SinhVien ON Lop.MaLop = SinhVien.MaLop
GROUP BY Lop.MaLop, TenLop

Câu 15: Cho biết số lượng sinh viên của mỗi khoa.
SELECT Khoa.MaKhoa, TenKhoa, Count(MaSV) as SLsinhvien
FROM ((Khoa INNER JOIN Lop ON Khoa.Makhoa = Lop.MaKhoa)
INNER JOIN SinhVien ON Lop.MaLop = SinhVien.MaLop)
GROUP BY Khoa.MaKhoa, TenKhoa

Câu 16: Cho biết số lượng sinh viên nữ của mỗi khoa.
SELECT Khoa.MaKhoa, TenKhoa, Count(MaSV) as SLsinhvien  FROM ((SinhVien INNER JOIN Lop ON Lop.MaLop = SinhVien.MaLop) INNER JOIN khoa ON KHOA.makhoa = Lop.makhoa)
WHERE Nu=Yes
GROUP BY Khoa.MaKhoa, TenKhoa

Câu 17: Cho biết tổng tiền học bổng của mỗi lớp
SELECT Lop.MaLop, TenLop, Sum(HocBong) as TongHB  FROM (Lop INNER JOIN SinhVien ON Lop.MaLop = SinhVien.MaLop)
GROUP BY Lop.MaLop, TenLop

Câu 18: Cho biết tổng số tiền học bổng của mỗi khoa
SELECT Khoa.MaKhoa, TenKhoa, Sum(HocBong) as TongHB  FROM ((Khoa INNER JOIN Lop ON Khoa.Makhoa = Lop.MaKhoa)INNER JOIN SinhVien ON Lop.MaLop = SinhVien.MaLop)
GROUP BY Khoa.MaKhoa, TenKhoa

Câu 19: Lập danh sánh những khoa có nhiều hơn 100 sinh viên. Danh sách cần: MaKhoa, TenKhoa, Soluong
SELECT Khoa.MaKhoa, TenKhoa, Count(MaSV) as SLsinhvien  FROM ((Khoa INNER JOIN Lop ON Khoa.Makhoa = Lop.MaKhoa)INNER JOIN SinhVien ON Lop.MaLop = SinhVien.MaLop)
GROUP BY Khoa.MaKhoa, TenKhoa
HAVING Count(MaSV) >100

Câu 20: Lập danh sánh những khoa có nhiều hơn 50 sinh viên nữ. Danh sách cần: MaKhoa, TenKhoa, Soluong
SELECT Khoa.MaKhoa, TenKhoa, Count(MaSV) as SLsinhvien  FROM ((Khoa INNER JOIN Lop ON Khoa.Makhoa = Lop.MaKhoa)INNER JOIN SinhVien ON Lop.MaLop = SinhVien.MaLop)
WHERE Nu=Yes GROUP BY Khoa.MaKhoa, TenKhoa HAVING Count(MaSV)>=50

Câu 21: Lập danh sách những khoa có tổng tiền học bổng >=1000000.
SELECT Khoa.MaKhoa, TenKhoa, Sum(HocBong) as TongHB  FROM ((Khoa INNER JOIN Lop ON Khoa.Makhoa = Lop.MaKhoa)INNER JOIN SinhVien ON Lop.MaLop = SinhVien.MaLop)
GROUP BY Khoa.MaKhoa, TenKhoa
HAVING Sum(HocBong)>= 1000000

Câu22: Lập danh sách sinh viên có học bổng cao nhất
SELECT SinhVien.*  FROM SinhVien
WHERE HocBong>= ALL(SELECT HocBong From Sinhvien)  

Câu 23: Lập danh sách sinh viên có điểm thi môn CSDL cao nhất
SELECT SinhVien.MaSV, HoTen, DiemThi  FROM SinhVien INNER JOIN KetQua ON SinhVien.MaSV = KetQua.MaSV
WHERE KetQua.MaMH= ‘CSDL’ AND DiemThi>=
ALL(SELECT DiemThi FROM KetQua WHERE MaMH = ‘CSDL’)

Câu 24: Lập danh sách những sinh viên không có điểm thi môn CSDL.
SELECT SinhVien.MaSV, HoTen, DiemThi,MaMH
FROM SinhVien INNER JOIN KetQua ON SinhVien.MaSV = KetQua.MaSV
WHERE SinhVien.MaSV NOT In (Select MaSV From KetQua Where MaMH=’CSDL’)

Câu 25: Cho biết những khoa nào có nhiều sinh viên nhất
SELECT Khoa.MaKhoa, TenKhoa, Count([MaSV]) AS SoLuongSV
FROM (Khoa INNER JOIN Lop ON Khoa.MaKhoa = Lop.MaKhoa) INNER JOIN SinhVien ON Lop.MaLop = SinhVien.MaLop
GROUP BY Khoa.MaKhoa, Khoa.TenKhoa
HaVing Count(MaSV)>=All(Select Count(MaSV) From ((SinhVien Inner Join Lop On Lop.Malop=SinhVien.Malop)Inner Join Khoa On Khoa.MaKhoa = Lop.MaKhoa )Group By Khoa.Makhoa)

====================================================================================================================================================================================
Bài tập 1 NodeJS
Khoa(makhoa char(10), tenkhoa char(30), dienthoai char(10))
GiangVien(magv int, hotengv char(30), luong decimal(5,2), makhoa char(10))
SinhVien(masv int, hotensv char(30), makhoa char(10), namsinh int, quequan char(30))
DeTai(madt char(10), tendt char(30), kinhphi int, NoiThucTap char(30))
HuongDan(masv int, madt char(10), magv int, ketqua decimal(5,2))

Viết các api sau: 
cau 1:  - Đưa ra thông tin gồm mã số, họ tên và tên khoa của tất cả các giảng viên
cau 2:  - Đưa ra thông tin gồm mã số, họ tên và tên khoa của các giảng viên của khoa ‘DIA LY va QLTN’
cau 3:  - Cho biết số sinh viên của khoa ‘CONG NGHE SINH HOC’
cau 4:  - Đưa ra danh sách gồm mã số, họ tênvà tuổi của các sinh viên khoa ‘TOAN’
cau 5:  - Cho biết số giảng viên của khoa ‘CONG NGHE SINH HOC’
cau 6:  - Cho biết thông tin về sinh viên không tham gia thực tập
cau 7:  - Đưa ra mã khoa, tên khoa và số giảng viên của mỗi khoa
cau 8:  - Cho biết số điện thoại của khoa mà sinh viên có tên ‘Le van son’ đang theo học
cau 9:  - Cho biết mã số và tên của các đề tài do giảng viên ‘Tran son’ hướng dẫn
cau 10:  - Cho biết tên đề tài không có sinh viên nào thực tập
cau 11:  - Cho biết mã số, họ tên, tên khoa của các giảng viên hướng dẫn từ 3 sinh viên trở lên.  
cau 12:  - Cho biết mã số, tên đề tài của đề tài có kinh phí cao nhất
cau 13:  - Cho biết mã số và tên các đề tài có nhiều hơn 2 sinh viên tham gia thực tập 
cau 14:  - Đưa ra mã số, họ tên và điểm của các sinh viên khoa ‘DIALY và QLTN’
cau 15:  - Đưa ra tên khoa, số lượng sinh viên của mỗi khoa
cau 16:  - Cho biết thông tin về các sinh viên thực tập tại quê nhà
cau 17:  - Hãy cho biết thông tin về những sinh viên chưa có điểm thực tập
cau 18:  - Đưa ra danh sách gồm mã số, họ tên các sinh viên có điểm thực tập bằng 0







// Cau 3 ===> DONE 
GET: dongXe: soChoNgoi > 5
    ==> dongXe: soChoNgoi[lt] = 5


// Cau 4 ==> Pending... ===> Refactoring....
GET: nhaCungCap
  dongXe[hangXe = Toyota] & mucPhi[donGia = 15.000]
  or
  dongXe[hangXe = KIA] & mucPhi[donGia = 15.000]
  ==> 


// Cau 5 ===> DONE 
GET:  nhaCungCap: sort[nhaCungCap: asc & maSoThue: desc]
  ==> sortBy: nhaCungCap,-maSoThue

// Cau 6 ==> Pending... ===> Refactoring....
GET: Count dangKyCungCap[ngayBatDau]=20/11/2015
  ==> 

// Cau 7 ==> Pending... ===> Refactoring....
GET: DongXe: hangXe
  ==> 


// Cau 8 ==> Pending... ===> Refactoring....
GET: 
  ==> 


// Cau 9 ==> Pending... ===> Refactoring....
GET: nhaCungCap [dangKyCungCap: dongXe:"Hiace" || dongXe:"Hiace"]
  ==> 

// Cau 9 ==> Pending... ===> Refactoring....
GET: nhaCungCap [not dangKyCungCap]
  ==> 



